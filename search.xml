<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/en/2024/06/09/lakeblue-double-decker/"/>
      <url>/en/2024/06/09/lakeblue-double-decker/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/en/2024/06/09/last-Z/"/>
      <url>/en/2024/06/09/last-Z/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/en/2024/06/09/longhai/"/>
      <url>/en/2024/06/09/longhai/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/en/2024/06/09/original-liveries-2024-spring/"/>
      <url>/en/2024/06/09/original-liveries-2024-spring/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/en/2024/06/09/shangluo-2023/"/>
      <url>/en/2024/06/09/shangluo-2023/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Record for Blog-Make</title>
      <link href="/en/2024/06/02/makeRecord/"/>
      <url>/en/2024/06/02/makeRecord/</url>
      
        <content type="html"><![CDATA[<p>Hardly when I discovered the fall lof Sina Blog along with the trend regarding blogging in my campus had I turned determined to make my own blog site. Instructions, operations and commands mentioned in this article are mainly based on <a href="https://www.jianshu.com/p/4eaddcbe4d12">relevant recipes on Jianshu (a social media in mainland China)</a> and <a href="https://pdpeng.github.io/2022/01/19/setup-personal-blog/">another blogger’s site</a>.</p><h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2><p>Creation of a brand-new repository named as <code>k-pk66.github.io</code> is taken as the first step of all, as the name before <code>github.io</code> is supposed to be your account name. Let’s mark the main Branch of the repo as <code>master</code> and set it as the branch on which the deployment of your page should depend via <code>Settings&gt;Pages&gt;Build and Deployment</code>.</p><h2 id="Terminal"><a href="#Terminal" class="headerlink" title="Terminal"></a>Terminal</h2><blockquote>The application where command lines are supposed to be entered is called "Terminal" in macOS. "cmd" in Windows may function the same.</blockquote><p>Homebrew is the tool for me to install <code>git</code> and <code>nvm</code> on macOS. The <code>nvm</code> is the version controller for Nodejs which is free to install Nodejs of any version, as you like.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">brew install git</span><br><span class="line">brew install nvm</span><br><span class="line"><span class="built_in">mkdir</span> ~/.nvm</span><br><span class="line"><span class="built_in">export</span> NVM_DIR=~/.nvm</span><br><span class="line">(brew --prefix nvm)/nvm.sh</span><br></pre></td></tr></table></figure><p>Install Node.js via <code>nvm</code>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install 4</span><br></pre></td></tr></table></figure><p>Install <code>hexo</code> via <code>npm</code>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>Then open the directory <code>k-pk66.github.io</code> via terminal.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init k-pk66.github.io</span><br><span class="line"><span class="built_in">cd</span> k-pk66.github.io</span><br></pre></td></tr></table></figure><p>The directory features <code>_config.yml</code>, the configuration file. You are recommended to make matching adjustments among parameters according to <a href="https://hexo.io/zh-cn/docs/configuration.html">the document issued by the officials</a>. GitHub is the place where my blog site relies on, so I set <code>deploy</code> the parameter in the config file as follows.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">http://github.com/k-pk66/k-pk66.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>The directory called <code>sources</code> includes a directory <code>_post</code> where a Markdown file has been generated as an example for writing. Command</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;makeRecord&quot;</span></span><br></pre></td></tr></table></figure><p>can work when you decide to create a new blog later on.</p><p>For more instructions and tips on writing, please check <a href="https://hexo.io/docs/writing.html">here</a>.</p><p>Use the following command to test your blog site via <a href="http://localhost:4000/">localhost</a>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>Use the following command to install the tool that enables you to deploy and publish your blog automatically.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>From now on, you only need to use a single command to keep your blog updated.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><h2 id="Authentication-for-GitHub"><a href="#Authentication-for-GitHub" class="headerlink" title="Authentication for GitHub"></a>Authentication for GitHub</h2><p>When you type the last command mentioned in the previous chapter for the first time, you are required to enter the account and password for Github. Beyond no doubt the account should be the same with what is displayed on the GitHub site, but when you enter the password as you remembered, things may not go in your favor.</p><p>GitHub has dropped its base-on-password authentication since Aug 13 2021. You have to generate your own Personal access tokens and enter one of those tokens to push your local repository to GitHub.</p><h2 id="Theme"><a href="#Theme" class="headerlink" title="Theme"></a>Theme</h2><blockquote>Butterfly is the theme I use up to the date when this record was issued. Let's take it for reference.</blockquote><p>Open terminal in the directory <code>k-pk66.github.io</code> and enter</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://gitee.com/immyw/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>To clone files of Butterfly the theme towards the directory <code>themes</code>. Then enter</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>to install plugins like renders or else. Then change the value of the parameter <code>theme</code> in <code>_config.yml</code> to <code>butterfly</code>, and you can check the result on localhost via <code>hexo s</code>.</p><h2 id="Extended-functions"><a href="#Extended-functions" class="headerlink" title="Extended functions"></a>Extended functions</h2><h3 id="Additional-language-versions"><a href="#Additional-language-versions" class="headerlink" title="Additional language versions"></a>Additional language versions</h3><blockquote>This chapter features instructions on how to add translated versions of blogs to the site.</blockquote><p>The chapter is based on <a href="https://shannonhung.github.io/posts/hexo-butterfly-lang-switch/">Shannon Hung’s tips</a>.</p><p>Duplicate <code>_config.yml</code> and rename the 2 doppelgängers as <code>config-zh.yml</code> and <code>config-en.yml</code>. Then make following changes in the matching sections of these 2 <code>.yml</code> files.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config-en.yml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 設定成英文</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">en</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 en </span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://&lt;url-url&gt;/en</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/en/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定啟動的路徑</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source-en</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public-en</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把中文的 source 進行排除</span></span><br><span class="line"><span class="attr">include:</span></span><br><span class="line"><span class="attr">exclude:</span></span><br><span class="line"><span class="attr">ignore:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">source/</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config-zh.yml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 設定成中文 </span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-TW</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用原本的url</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://shannonhung.github.io</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定啟動的路徑</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把英文的 source 進行排除</span></span><br><span class="line"><span class="attr">include:</span></span><br><span class="line"><span class="attr">exclude:</span></span><br><span class="line"><span class="attr">ignore:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">source-en/</span></span><br></pre></td></tr></table></figure><p>Then create the directory <code>source/self</code> and create the following file <code>btf.js</code>.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 判斷是否為英文</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">isIncludeEN</span> = item =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> key = <span class="string">&#x27;/en/&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> item.<span class="title function_">includes</span>(key)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 建立 重新導向到不同語言的 url </span></span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">loadFullPage</span> = <span class="function">(<span class="params">url</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = url</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 重新導向 </span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">eventFn</span> = (<span class="params">elements, includeEN</span>) =&gt; &#123;</span><br><span class="line">    elements.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (!includeEN || !<span class="title function_">isIncludeEN</span>(item.<span class="property">href</span>)) &#123;</span><br><span class="line">        item.<span class="property">href</span> = <span class="string">`javascript:loadFullPage(&#x27;<span class="subst">$&#123;item.href&#125;</span>&#x27;);`</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 判斷目前是否為英文</span></span><br><span class="line">  <span class="keyword">const</span> nowIncludeEN = <span class="title function_">isIncludeEN</span>(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>)</span><br><span class="line">    </span><br><span class="line">  <span class="keyword">const</span> selector = nowIncludeEN</span><br><span class="line">    ? <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;a[href^=&quot;https://k-pk66.github.io&quot;]&#x27;</span>)</span><br><span class="line">    : <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;a[href^=&quot;/en/&quot;]&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="title function_">eventFn</span>(selector, nowIncludeEN)</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><p>Then duplicate <code>source</code> and rename the duplicate as <code>source-en</code>, indicating its identity as the place where English version pages are stored. Please make sure <code>btf.js</code> is included in <code>source-en/self</code>.</p><p>Duplicate <code>_config.butterfly.yml</code> as <code>config-butterfly-en.yml</code> and rename the original file as <code>config-butterfly-zh.yml</code>. Inject <code>btf.js</code> at the bottom.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config-butterfly-zh.yml</span></span><br><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">data-pjax</span> <span class="string">src=&quot;/self/btf.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config-butterfly-en.yml</span></span><br><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">data-pjax</span> <span class="string">src=&quot;/en/self/btf.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>Notice: All paths of files mentioned in the duplicated <code>yml</code> files should be added with <code>/en/</code> as the prefix to ensure that all files can be referred to as expected.</p><p>Add commands in <code>package.json</code> to enable the terminal to generate and push the directory <code>public-en</code>.</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;push&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean &amp;&amp; hexo g &amp;&amp; hexo douban &amp;&amp; gulp &amp;&amp; hexo deploy&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;show&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean &amp;&amp; hexo g &amp;&amp; hexo s&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;update&quot;</span><span class="punctuation">:</span> <span class="string">&quot;git init &amp;&amp; git add . &amp;&amp; git commit -m &#x27;backup&#x27; &amp;&amp; git push origin main&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;kk&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean &amp;&amp; hexo g &amp;&amp; hexo deploy&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;en&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean &amp;&amp; hexo g --config config-en.yml &amp;&amp; hexo s --config config-en.yml&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>Then adjust the functions of commands via <code>deploy.sh</code>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> [[ <span class="string">&quot;<span class="variable">$#</span>&quot;</span> -gt 0 ]]; <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">        -h|--<span class="built_in">help</span>) </span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;Usage: bash.sh [en|zh|all|show &lt;en|zh&gt;|-h]&quot;</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;Options:&quot;</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;  [deploy|d] en   Deploy English configuration to GitHub Pages&quot;</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;  [deploy|d] zh   Deploy Chinese configuration to GitHub Pages&quot;</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;  [deploy|d] all  Deploy both English and Chinese configurations to GitHub Pages&quot;</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;  [show|s] en     Execute npm run show for English configuration&quot;</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;  [show|s] zh     Execute npm run show for Chinese configuration&quot;</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;  -h, --help      Display this help message&quot;</span></span><br><span class="line">            <span class="built_in">exit</span> 0</span><br><span class="line">            ;;</span><br><span class="line">        d | deploy)</span><br><span class="line">            lang=<span class="variable">$2</span></span><br><span class="line">            <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$lang</span>&quot;</span> = <span class="string">&quot;en&quot;</span> ] || [ <span class="string">&quot;<span class="variable">$lang</span>&quot;</span> = <span class="string">&quot;zh&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">cp</span> <span class="string">&quot;config-<span class="variable">$lang</span>.yml&quot;</span> _config.yml</span><br><span class="line">                <span class="built_in">cp</span> <span class="string">&quot;config-butterfly-<span class="variable">$lang</span>.yml&quot;</span> <span class="string">&quot;_config.butterfly.yml&quot;</span></span><br><span class="line">                npm run kk</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;Deploy <span class="variable">$1</span> success!&quot;</span></span><br><span class="line">            <span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$lang</span>&quot;</span> = <span class="string">&quot;all&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">                <span class="keyword">for</span> lang_choice <span class="keyword">in</span> <span class="string">&quot;zh&quot;</span> <span class="string">&quot;en&quot;</span>; <span class="keyword">do</span></span><br><span class="line">                    <span class="built_in">cp</span> <span class="string">&quot;config-<span class="variable">$lang_choice</span>.yml&quot;</span> _config.yml</span><br><span class="line">                    <span class="built_in">cp</span> <span class="string">&quot;config-butterfly-<span class="variable">$lang_choice</span>.yml&quot;</span> <span class="string">&quot;_config.butterfly.yml&quot;</span></span><br><span class="line">                    npm run kk</span><br><span class="line">                    <span class="built_in">echo</span> <span class="string">&quot;Deploy <span class="variable">$lang_choice</span> success!&quot;</span></span><br><span class="line">                <span class="keyword">done</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;Error! Please input &#x27;en&#x27; or &#x27;zh&#x27; or &#x27;all&#x27;!&quot;</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">            ;;</span><br><span class="line">        s | show)</span><br><span class="line">            lang=<span class="variable">$2</span></span><br><span class="line">            <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$lang</span>&quot;</span> = <span class="string">&quot;en&quot;</span> ] || [ <span class="string">&quot;<span class="variable">$lang</span>&quot;</span> = <span class="string">&quot;zh&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">cp</span> <span class="string">&quot;config-<span class="variable">$lang</span>.yml&quot;</span> _config.yml</span><br><span class="line">                <span class="built_in">cp</span> <span class="string">&quot;config-butterfly-<span class="variable">$lang</span>.yml&quot;</span> <span class="string">&quot;_config.butterfly.yml&quot;</span></span><br><span class="line">                npm run show</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;Running npm show!&quot;</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;Error! Please use &#x27;./bash.sh show en&#x27; or &#x27;./bash.sh show zh&#x27;!&quot;</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">            <span class="built_in">shift</span> <span class="comment"># Move to the next argument after &#x27;show&#x27;</span></span><br><span class="line">            ;;</span><br><span class="line">        *)</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;Error! Please input deploy &lt;en|zh|all&gt; or &#x27;show &lt;en|zh&gt;&#x27; or &#x27;-h&#x27; for help!&quot;</span></span><br><span class="line">            <span class="built_in">exit</span> 1</span><br><span class="line">            ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line">    <span class="built_in">shift</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>Make the <code>.sh</code> file executable via the terminal.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x deploy.sh</span><br></pre></td></tr></table></figure><p>All versions among languages can be deployed via the following command from now on.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./deploy.sh d all</span><br></pre></td></tr></table></figure><h2 id="Troubleshoot"><a href="#Troubleshoot" class="headerlink" title="Troubleshoot"></a>Troubleshoot</h2><p>Problems may occur during the config and here’s the list of some of them and their matching solutions.</p><h3 id="Oversized-files"><a href="#Oversized-files" class="headerlink" title="Oversized files"></a>Oversized files</h3><p>GitHub restricts the size of one single file to upload (normally no more than 100MB), so you had better not upload videos to GitHub.</p><p>Uploads featuring file that takes up too much disk space may trigger the info</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">remote: error: GH001: Large files detected. You may want to try Git Large File Storage - https://git-lfs.github.com.</span><br></pre></td></tr></table></figure><p>when you make the push. You may remove them in the corresponding paths, but this fatal info will still occur when you make corrected pushes. To solve this problem, you should open the terminal in the directory <code>.deploy_git</code> and enter the following command to check logs of commit for the blogs.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br></pre></td></tr></table></figure><p>Press enter to ask for the terminal to display more. Find the version after which you mistook to upload the oversized and copy the commit code of this version.</p><p>Assuming the outputs of the command line may display as follows:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">commit 6657f1c73af4254557e77c3dd2c681ddf10e5d51 (HEAD -&gt; master)</span><br><span class="line">Author: K-PK66 &lt;example@example.com&gt;</span><br><span class="line">Date:   Mon Jun 3 12:26:51 2024 +0800</span><br><span class="line"></span><br><span class="line">    Site updated: 2024-06-03 12:26:49</span><br><span class="line"></span><br><span class="line">commit 35a21f2e94c5022503cfbce29ff2dacf2b497cd2</span><br><span class="line">Author: K-PK66 &lt;example@example.com&gt;</span><br><span class="line">Date:   Mon Jun 3 01:28:30 2024 +0800</span><br><span class="line"></span><br><span class="line">    Site updated: 2024-06-03 01:28:30</span><br></pre></td></tr></table></figure><p>The following command DO help when you are attempting to reset the version back to that at 1:28:30 on June 3 2024 (GMT+8).</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset 35a21f2e94c5022503cfbce29ff2dacf2b497cd2</span><br></pre></td></tr></table></figure><p>Now make re-push with proper files. It will return normal.</p><h3 id="Fonts"><a href="#Fonts" class="headerlink" title="Fonts"></a>Fonts</h3><p>Create new directory <code>source/fonts</code> where font files with the extension <code>ttf</code>, <code>otf</code>, <code>woff</code>, etc. can be put into. Then create <code>css</code> file in the directory <code>css</code> of your theme to employ the fonts.</p><blockquote>Let's take the introduction of the font "A-OTF Shin Go Pro Regular"（A-OTF　新ゴ　Pro R） and the re-name as "A-OTF Shin Go Pro R" for it as example.</blockquote><p>Put the font file <code>AOTFShinGoProRegular.woff</code> into the directory <code>fonts</code>. Then create file <code>css/my.css</code> in the theme’s directory and type</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;A-OTF Shin Go Pro R&#x27;</span>;</span><br><span class="line">    <span class="attribute">font-style</span>: normal;</span><br><span class="line">    <span class="attribute">font-weight</span>: normal;</span><br><span class="line">    <span class="attribute">src</span>: <span class="built_in">local</span>(<span class="string">&#x27;A-OTF Shin Go Pro R&#x27;</span>), <span class="built_in">url</span>(<span class="string">&#x27;../fonts/AOTFShinGoProRegular.woff&#x27;</span>) <span class="built_in">format</span>(<span class="string">&#x27;woff&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;A-OTF Shin Go Pro R&#x27;</span>, sans-serif;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>to introduce it to the site. Afterwards type following lines in the config file <code>_config.yml</code> to apply it to the display of the site.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Inject</span></span><br><span class="line"><span class="comment"># Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span></span><br><span class="line"><span class="comment"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span></span><br><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/my.css&quot;&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">  <span class="comment"># - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>Subset can be used to introduce part of the font file to the site. Methods remain the same with what is mentioned above.</p><h3 id="Server-Timeout-during-uploads-mainland-China-only"><a href="#Server-Timeout-during-uploads-mainland-China-only" class="headerlink" title="Server Timeout during uploads (mainland China only)"></a>Server Timeout during uploads (mainland China only)</h3><blockquote>This section features problems that only may occur in mainland China, due to the Great Firewall and the DNS interferences it brings about. To find relevant solutions, please check the Mandarin version of this page.</blockquote><p>Please check <a href="https://k-pk66.github.io/2024/06/02/makeRecord#%E4%B8%8A%E4%BC%A0%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%AD%E9%81%87%E5%8D%A1%E9%A1%BF%EF%BC%88%E4%BB%85%E9%99%90%E4%B8%AD%E5%9B%BD%E5%A4%A7%E9%99%86%E5%9C%B0%E5%8C%BA%EF%BC%89">Simplified Chinese version of this section</a> for solutions.</p>]]></content>
      
      
      <categories>
          
          <category> Configuration </category>
          
      </categories>
      
      
        <tags>
            
            <tag> #Cmd# </tag>
            
            <tag> #Environment Config# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>「嘉陵の鋼錦の上が、秦巴の氷葉は踊る」</title>
      <link href="/en/2024/01/24/Baoji-Chengdu-Railway-North/"/>
      <url>/en/2024/01/24/Baoji-Chengdu-Railway-North/</url>
      
        <content type="html"><![CDATA[<blockquote>This article is still under translation!</blockquote><blockquote>The title means "Ice and weeds dancing on the iron brocade across Jialing River and Qinling Mountain Range" in Japanese and can be pronounced as "Kariō no Kōnishiki no Uega, Chinba no Kōriba wa Odoru". The article has been available with the same title in Mandarin on Zhihu since Jan 2024, and some of the photos may feature anti-counterfeiting marks due to the fact that have been removed from local storage when published here.<p>The station name “Qinling”, “Guanyinshan”, “Baoji”, “Fengxian” and “Huixian” can be pronounced as “Ch’in Ling”, “Kuan Yin Shan”, “Pau Chi”, “Fong Hsian” and “Hui Hsian” respectively.</p></blockquote><p><img src="https://upload.wikimedia.org/wikipedia/commons/0/0e/Qinling_Railway_Station_%28Mountview%29%2C_Jan_20_2024.jpg" alt="Passengers getting out from coaches of Train T⅞ in Qinling Railway Station (January 20th, 2024)"></p><p>Baoji-Chengdu Railway is the first electrified line throughout mainland China. The line’s north section and the south witnessed the joining near Huang Sha He Village in mid-July 1956 and its operation began on the first day of 1958 after the opening ceremony which was held by He Long (the former marshal of PLA) and the first capital-express train from the metropolitan in southwest China. USSR played a critical role in the line’s layout along with electrification, and it is the line itself that is to stand the test of ages after the collapse of the Soviet Union. The first railway line connecting southwest China with northwest now carries 3 pairs of confirmed trains to travel through Qinling Mountain Range, and Jialing River, the longest of all rivers originated from the grand boundary that separates north China and the south.</p><p>I can hardly find chances to travel via the 67-year-old railway line as my hometown locates on Eastern China and the only chance to hear about the line can be dated back to textbooks in my senior high ages. The outcome of CCP’s <em>Plan of the first 5 years</em> finally gets into my horizon thanks to admissions from the college in Xi’an, the manipulative capital of Shaanxi Province where Baoji, one side of the railway locates. I finally obtained vacancies after Great Cold (the last one of the 24 solar terms) this year and, without hesitation, I decided to go there as a journey during the Spring Festival Traffic Peak.</p><p>The number of trains on the first electrified railway line in China PR has experienced a sharp decrease due to damage spelt by rainstorms in 2018 summer, as the rest of all trains on the line are instructed to bypass the north section (especially near Lüeyang) at daytime. The shortage of trains forced me to divide my trip into 2 days and I have to opt T7 (the “HeavenStar”) Train, the first train that enters the line from the north side for departure from Xi’an of both days. Train Y50½ was added to the line’s timetable at that time to make more tourists able to enjoy the winter view of the rail line, but I certainly refuse the long and boring stays in museums and parks along the line, so I dropped the thoughts regarding purchases of the Y-series trains.</p><h2 id="Jour-Premieres-2024-01-20-Qinling-Railway-Station-and-Lingguanxia-Canyon"><a href="#Jour-Premieres-2024-01-20-Qinling-Railway-Station-and-Lingguanxia-Canyon" class="headerlink" title="Jour Premières (2024&#x2F;01&#x2F;20): Qinling Railway Station and Lingguanxia Canyon"></a>Jour Premières (2024&#x2F;01&#x2F;20): Qinling Railway Station and Lingguanxia Canyon</h2><p><img src="https://upload.wikimedia.org/wikipedia/commons/b/b1/Destination_Sign_Board_of_T7%2C_-8_%28Beijing_West-Chengdu_West%29%2C_Jan_20_2024.jpg" alt="Destination Sign Board of T⅞"><br><img src="https://raw.githubusercontent.com/K-PK66/k-pk66.github.io/master/2024/01/24/Baoji-Chengdu-Railway-North/640.png" alt="One of the passengers onboard sleeping in the corridor. I later learned that he got on the train in Beijing and would get off in Chengdu, but seat ticket had been sold out when he arrived at the railway station in the capital"></p><p>HeavenStar made a punctual departure from Xi’an at 6:02 a.m. and the time when the train leaves Baoji Railway Station chords with scheduled. The train finally arrived at Qinling Railway Station 15 minutes earlier than expected.</p><p>Winter vacation of primary school and junior high students has had started on this day, as it happened to be one of the days off for adult officers, making the train increasingly crowded with the before-18 and their parents, most of which are bound to get off in Qinling. Surroundings of the fourth-tier station (assessed by officials from China Railways) have experienced great improvements and service extensions conducted by governors in the past few years, attracting an increasing number of tourists. The origin of Jialing River stands few kilometres away, and many hikers prefer starting their trip from the station.</p><p>The HeavenStar had officially arrived at Baoji-Chengdu Railway after its passing-by at <ruby><rb>Renjiawan</rb><rt>Ren Chia Wan</rt></ruby> Railway Station. Like all trains to take challenges from the line, the train was to go through a total of 47 tunnels before its arrival at Qinling, the highest station line-wide, between which tracks feature a minimum radius of no more than 300 meters and the maximum slope of over 30‰ (meaning that the train has to climb up to the height of over 30 meters every single kilometer in that section), which has been hazardous enough to get banned by railway corporations globewide nowadays. The steep climb, thus, makes it possible for passengers and drivers to spot 2 tracks of different heights at the bottom of Guanyinshan, the beginning of the crazy curve. The succession of tunnels and bridges spell the success of the line along with flickering of the window-view, making tourists onboard exclaiming. The north side of Qinling Mountain Range can hardly gain the direct shine after sunrise, making the sceneries covered with more white snow and frost than that in the urban area of Baoji. Small crystals covering leaves throughout the mountains scattered the rest rays of light, making the train coaches even brighter. Tourists are quite surprised at the early spot of this calligraphy-like sceneries spelt by the figure of mountains and the embellishment of snows, taking out their photographing devices and turning to others to share their feelings. Immigrant workers are not exceptions - they proved to be willing to share their views and thoughts when they are back to their home with their descendants. Kids onboard kept screaming and dragged the sleeves of their parents to share their happiness, as the youngsters paused their playings on phones to take photos. The middle-aged turned their video calls on as livestreams for their families, and the aged unsurprisingly demonstrated their calmness and sophistication by expressing nothing via faces.</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/8/89/Exposed_Section_of_Guanyinshan_Curve%2C_Jan_20_2024.jpg" alt="Looking up at a part of Guanyinshan Curve. Mountains were covered with snows (Shot on 2024/01/20)"><br><img src="https://upload.wikimedia.org/wikipedia/commons/6/63/Exposed_Section_of_Guanyinshan_Curve%2C_Jan_23_2024.jpg" alt="Taking wider look up at Guanyinshan Curve during the second trip. There are 2 bridges exposed along with an exit of a tunnel in front as well as another tunnel standing at the farther (Shot on 2024/01/23)"></p><p>The train started to slow down upon entering the 47th tunnel. It arrived at Qinling Railway Station several minutes later.</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/3/33/Board_of_Tunnel_47_%28Qinling_Tunnel%29_of_Baoji-Chengdu_Railway%2C_Jan_23_2024.jpg" alt="Qinling Tunnel (Tunnel №47) is the second longest tunnel throughout the line with the length of over 2.3 kilometres"></p><p>HeavenStar was the best choice for the locals in Baoji to take an early snow-view of the geological dividing-line, as it stood out with a very good timetable for these 2 stations. The train arrived at Baoji with a modest time of around 8 a.m. and a perfect before-noon time of 9 to arrive at Qinling - the melting process of snow have not reached the peak at that time, as the sunrise began around 7:30 a.m. Buses and shuttles had been waiting for a long time in front of the station to pick up the passengers to museums and the Jialing origin, as they could be the only way for the visitors to avoid traffic hazards on the highways towards the attractions. Theme parks standing near the station featured literature-related exhibition center and sculptures made up of track iron.</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/2/25/Qinling_Railway_Station%2C_Jan_20_2024.jpg" alt="Just like its name, Qinling Railway Station is surrounded by Qinling Mountain Range"><br><img src="https://upload.wikimedia.org/wikipedia/commons/a/a1/Baoji-Chengdu_Railway_Theme_Park_near_Qinling_Railway_Station%2C_Jan_20_2024.jpg" alt="The theme park near Qinling Railway Station features the slogan of the line&#39;s spirits (No fears, no surrenders and no hesitations)"><br><img src="https://upload.wikimedia.org/wikipedia/commons/0/0a/Baoji-Chengdu_Railway_Spirit_Pavilion%2C_Jan_20_2024.jpg" alt="Literature Pavilion of Baoji-Chengdu Railway. The iced cement ground was really slippery"></p><p>I re-entered the station after visiting these memorial sites nearby to catch the train №606¾ which will arrive at Qinling 2 hours later. All rail-workers in the station were surprised at my re-entrance and later told me the trend that I’m the only tourist that was to take the slow train to go southwards from this station.</p><p>“It’s very rare for a visitor to go southwards - not to mention leaving the station before noon.” They added.</p><p>I intended to take the quiet moment as opportunity to gain more information about the line from the officials, but got interrupted by a brand-new topic among them.</p><p>“When will (K)545 arrive today? I bet it will make an early arrival as well.” One of them asked.</p><p>“Maybe, but there’s still no calls up to now. I don’t know.” A response came out in seconds.</p><p>Hardly had I dug into the meanings of the so-called “<em>calls</em>“ when an electrified locomotive passed by. The Ho Hsieh 3 locomotive should be the one that had pulled HeavenStar to climb the previous mountains as an additional one.</p><p>Slopes of the line’s north section had been steep enough when the operation began in 1958. It’s not an exaggeration to say that it takes almost the same time for steam locomotives to climb from Guanyinshan Railway Station to <ruby><rb>Qingshiya</rb><rt>Ch’in Shi Ya</rt></ruby> with walking. To solve this problem, China Railways listed the line as the first to be electrified and only in this way can the locomotives with the capabilities of higher speeds get introduced to the steep section. An additional locomotive would be employed to pull the passenger coaches up, and 2 more locomotives were required to push the freight trains from their butts. They were once grouped as “Qinling Additional Locomotives Team” but now re-categorized into <ruby><rb>Xinfengzhen</rb><rt>Hsin Fong Chen</rt></ruby> Station Department with a new name “Qinling North Application Office”.</p><p>The <em>call</em> finally arrived. They Qinling officers had picked up the <em>call</em> from Guanyinshan that train №K545 had passed by the foothill station already. Then they dived into preparations for the from-Harbin train’s arrival and began to broadcast the start of ticket-check, despite the fact that none of the passengers would get on that train on this day. One of the officers noticed my staring at the platform, and he asked me whether I was willing to get out of the lounge to take photos for the train, should I step off the platform, and I responded with an affirmative answer. The officer then began to share a story of a friend of his who enjoys collecting models of train coaches, making me green with envy. Soon later another crowd of people got off at this station after the arrival.</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/6/64/HXD3-0401_Locomotive_as_extra_locom._Dragging_SS7D-0014_%26_K545_Train_arriving_Qinling_Railway_Station%2C_Jan_20_2024.jpg" alt="Ho Hsieh 3 Series Locomotive № 0401 was on duty of pulling the train K545 on that day"></p><p>I returned to the lounge soon after the arrival of Train K545. Train K245 arrived and left the station an hour later and train 6063 eventually arrived roughly 10 minutes ahead of schedule after another hour.</p><p>The train № 606¾ is the only trains on the line that do not terminate in Chengdu. <ruby><rb>Guangyuan</rb><rt>Kuang Yuan</rt></ruby> Railway Station, the station that divides administrative coverage of Chengdu Bureau and Xi’an Bureau of China Railways, is their terminal station at the south end while Baoji is the north one. The departure time from Baoji is 10 a.m., which is quite ideal for youngsters and the white-collars who tend to get up late on weekends, and the train features the lowest ticket price to get into Qinling Mountain Range, so the 6 coaches of this train were also fulfilled with passengers and visitors before its arrival.</p><p>I got an affirmative answer when I asked the Qinling officers whether the lounge will be more crowded in the afternoon. They claimed that approximately 800 tourists had purchased tickets of Train 6064 to go downhill at that day, and that over 200 individuals might get off the Train 6063 that day. I confirmed my own identity as the only passenger who was going to start the journey southwards from this station after I got on the platform, and the station was in a complete silence thanks to the snows and the cheerlessness - everything turned different right after the train’s arrival and its door-openings.</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/c/c7/Platform_of_Qinling_Railway_Station_%28View_from_Northend%29%2C_Jan_20_2024.jpg" alt="Peace before the train&#39;s arrival"><br><img src="https://upload.wikimedia.org/wikipedia/commons/9/9b/HXD3-0171_Locomotive_as_Extra_Locom._Dragging_SS7D_%26_6063_Train_arriving_Qinling_Railway_Station%2C_Jan_20_2024.jpg" alt="Ho Hsieh 3 Series Locomotive № 0171 was on duty of pulling train 6063 to the top of the line on that day"><br><img src="https://upload.wikimedia.org/wikipedia/commons/e/e3/Platform_of_Qinling_Railway_Station_%28View_from_Southend%29%2C_Jan_20_2024.jpg" alt="The platform got crowded upon get-off"></p>]]></content>
      
      
      <categories>
          
          <category> Railways </category>
          
      </categories>
      
      
        <tags>
            
            <tag> #ChinaRailways# </tag>
            
            <tag> #Railways# </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
